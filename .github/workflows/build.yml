name: Build Multi-platform Executables

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform: [ windows, linux-amd64, linux-arm64 ]

    runs-on: ${{ matrix.platform == 'windows' && 'windows-latest' || 'ubuntu-latest' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup dependencies for ${{ matrix.platform }}
        run: |
          sudo apt-get update
          if [[ "${{ matrix.platform }}" == "linux-arm64" ]]; then
            sudo apt-get install -y g++-aarch64-linux-gnu qt5-qmake libqt5serialport5-dev qtbase5-dev:arm64
          elif [[ "${{ matrix.platform }}" == "linux-amd64" ]]; then
            sudo apt-get install -y g++ qt5-qmake libqt5serialport5-dev qtbase5-dev
          fi

      - name: Show installed compilers
        run: |
          echo "Current compilers:"
          which g++
          g++ --version

      - name: Print environment variables
        run: |
          echo "PATH: $PATH"
          echo "QTDIR: $QTDIR"
          which mkdir
          which cmake
        env:
          QTDIR: /usr/lib/linux-amd64/qt5
          PATH: ${{ env.PATH }}:/usr/lib/linux-amd64/qt5/bin

      - name: Configure CMake
        run: |
          mkdir -p build && cd build
          if [[ "${{ matrix.platform }}" == "windows" ]]; then
            cmake .. -G "MinGW Makefiles"
          elif [[ "${{ matrix.platform }}" == "linux-amd64" ]]; then
            cmake .. -DCMAKE_TOOLCHAIN_FILE=../toolchains/linux-x86_64.cmake
          elif [[ "${{ matrix.platform }}" == "linux-arm64" ]]; then
            cmake .. -DCMAKE_TOOLCHAIN_FILE=../toolchains/linux-aarch64.cmake
          fi
        env:
          QTDIR: /usr/lib/linux-amd64/qt5
          PATH: ${{ env.PATH }}:/usr/lib/linux-amd64/qt5/bin

      - name: Build project
        run: |
          cd build
          make -j$(nproc)
        env:
          QTDIR: /usr/lib/linux-amd64/qt5
          PATH: ${{ env.PATH }}:/usr/lib/linux-amd64/qt5/bin

      - name: Check build directory contents
        run: |
          ls -l build

      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: serial_port_debugger-${{ matrix.platform }}
          path: build/serial_port_debugger